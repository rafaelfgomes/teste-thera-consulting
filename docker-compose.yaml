services:
  db:
    volumes:
      - mysql:/var/lib/mysql
    container_name: db
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_HOST: '%'
    ports:
      - ${DB_PORT:-3306}:3306
    networks:
      net:

  node:
    volumes:
      - ./api:/api
      - ./frontend/site:/app
      - ./frontend/admin:/admin
    container_name: node-cli
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        GID: ${GID}
        TIMEZONE: ${TIMEZONE}
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_ROOT_USER}
      - DB_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - NEXT_PUBLIC_API_URL=http://127.0.0.1:${BACKEND_PORT:-8080}/api
      - NODE_ENV=${APP_ENV:-development}
    depends_on:
      - "db"
    networks:
      net:

  api:
    volumes:
      - ./api:/api
    container_name: api
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      args:
        GID: ${GID}
        TIMEZONE: ${TIMEZONE}
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_ROOT_USER}
      - DB_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - NODE_ENV=${APP_ENV:-development}
    depends_on:
      - "node"
    networks:
      net:

  admin:
    volumes:
      - ./frontend/admin:/admin
    container_name: admin
    build:
      context: .
      dockerfile: ./docker/admin/Dockerfile
      args:
        GID: ${GID}
        TIMEZONE: ${TIMEZONE}
    environment:
      - NEXT_PUBLIC_API_URL=http://127.0.0.1:${BACKEND_PORT:-8080}/api
      - NODE_ENV=${APP_ENV:-development}
    depends_on:
      - "api"
    networks:
      net:

  site:
    volumes:
      - ./frontend/site:/app
    container_name: site
    build:
      context: .
      dockerfile: ./docker/site/Dockerfile
      args:
        GID: ${GID}
        TIMEZONE: ${TIMEZONE}
    environment:
      - NEXT_PUBLIC_API_URL=http://127.0.0.1:${BACKEND_PORT:-8080}/api
      - NODE_ENV=${APP_ENV:-development}
    depends_on:
      - "api"
    networks:
      net:

  proxy:
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    container_name: proxy
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        TIMEZONE: ${TIMEZONE}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      - api
      - site
      - admin
    networks:
      net:

networks:
  net:
    name: app-network
    external: false

volumes:
  mysql:
    name: mysql-data